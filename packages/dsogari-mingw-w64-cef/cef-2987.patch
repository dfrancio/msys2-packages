diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/cmake/cef_variables.cmake cef_binary_3.2987.1596.gc2b4638_windows64/cmake/cef_variables.cmake
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/cmake/cef_variables.cmake	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/cmake/cef_variables.cmake	2017-03-20 01:19:48.460137600 -0300
***************
*** 304,310 ****
  # Windows configuration.
  #
  
! if(OS_WINDOWS)
    # Configure use of the sandbox.
    option(USE_SANDBOX "Enable or disable use of the sandbox." ON)
    if(USE_SANDBOX AND NOT MSVC_VERSION EQUAL 1900)
--- 304,451 ----
  # Windows configuration.
  #
  
! if(MINGW)
!   set(CEF_LIBTYPE STATIC)
!   list(APPEND CEF_COMPILER_FLAGS
!     -fno-strict-aliasing
!     -fstack-protector
!     -funwind-tables
!     -fvisibility=hidden
!     --param=ssp-buffer-size=4
!     -pipe
!     -pthread
!     -Wall
!     -Wno-missing-field-initializers
!     -Wno-unused-parameter
!     )
!   list(APPEND CEF_C_COMPILER_FLAGS
!     -std=c99
!     )
!   list(APPEND CEF_CXX_COMPILER_FLAGS
!     -fno-exceptions
!     -fno-rtti
!     -fno-threadsafe-statics
!     -fvisibility-inlines-hidden
!     -std=gnu++11
!     -Wsign-compare
!     )
!   list(APPEND CEF_COMPILER_FLAGS_DEBUG
!     -O0
!     -g
!     )
!   list(APPEND CEF_COMPILER_FLAGS_RELEASE
!     -O2
!     -fdata-sections
!     -ffunction-sections
!     -fno-ident
!     -DNDEBUG
!     -U_FORTIFY_SOURCE
!     -D_FORTIFY_SOURCE=2
!     )
!   list(APPEND CEF_LINKER_FLAGS
!     -fPIC
!     -pthread
!     -Wl,-rpath,.
!     )
!   list(APPEND CEF_LINKER_FLAGS_RELEASE
!     -Wl,-O1
!     -Wl,--as-needed
!     -Wl,--gc-sections
!     )
! 
!   include(CheckCCompilerFlag)
!   include(CheckCXXCompilerFlag)
! 
!   CHECK_C_COMPILER_FLAG(-Wno-unused-local-typedefs COMPILER_SUPPORTS_NO_UNUSED_LOCAL_TYPEDEFS)
!   if(COMPILER_SUPPORTS_NO_UNUSED_LOCAL_TYPEDEFS)
!     list(APPEND CEF_C_COMPILER_FLAGS
!       -Wno-unused-local-typedefs
!       )
!   endif()
! 
!   CHECK_CXX_COMPILER_FLAG(-Wno-literal-suffix COMPILER_SUPPORTS_NO_LITERAL_SUFFIX)
!   if(COMPILER_SUPPORTS_NO_LITERAL_SUFFIX)
!     list(APPEND CEF_CXX_COMPILER_FLAGS
!       -Wno-literal-suffix
!       )
!   endif()
! 
!   CHECK_CXX_COMPILER_FLAG(-Wno-narrowing COMPILER_SUPPORTS_NO_NARROWING)
!   if(COMPILER_SUPPORTS_NO_NARROWING)
!     list(APPEND CEF_CXX_COMPILER_FLAGS
!       -Wno-narrowing
!       )
!   endif()
! 
!   if(PROJECT_ARCH STREQUAL "x86_64")
!     # 64-bit architecture.
!     list(APPEND CEF_COMPILER_FLAGS
!       -m64
!       -march=x86-64
!       )
!     list(APPEND CEF_LINKER_FLAGS
!       -m64
!       )
!   elseif(PROJECT_ARCH STREQUAL "x86")
!     # 32-bit architecture.
!     list(APPEND CEF_COMPILER_FLAGS
!       -msse2
!       -mfpmath=sse
!       -mmmx
!       -m32
!       )
!     list(APPEND CEF_LINKER_FLAGS
!       -m32
!       )
!   endif()
! 
!   list(APPEND CEF_COMPILER_DEFINES
!     WIN32 _WIN32 _WINDOWS             # Windows platform
!     UNICODE _UNICODE                  # Unicode build
!     NOMINMAX                          # Use the standard's templated min/max
!     WIN32_LEAN_AND_MEAN               # Exclude less common API declarations
!     _FILE_OFFSET_BITS=64              # Allow the Large File Support (LFS) interface to replace the old interface.
!     )
! 
!   # Standard libraries.
!   set(CEF_STANDARD_LIBS
!     ssp
!     )
! 
!   # CEF directory paths.
!   set(CEF_RESOURCE_DIR        "${_CEF_ROOT}/Resources")
!   set(CEF_BINARY_DIR          "${_CEF_ROOT}/$<CONFIGURATION>")
!   set(CEF_BINARY_DIR_DEBUG    "${_CEF_ROOT}/Debug")
!   set(CEF_BINARY_DIR_RELEASE  "${_CEF_ROOT}/Release")
! 
!   # CEF library paths.
!   set(CEF_LIB_DEBUG   "${CEF_BINARY_DIR_DEBUG}/libcef.lib")
!   set(CEF_LIB_RELEASE "${CEF_BINARY_DIR_RELEASE}/libcef.lib")
! 
!   # List of CEF binary files.
!   set(CEF_BINARY_FILES
!     chrome_elf.dll
!     d3dcompiler_43.dll
!     d3dcompiler_47.dll
!     libcef.dll
!     libEGL.dll
!     libGLESv2.dll
!     natives_blob.bin
!     snapshot_blob.bin
!     )
! 
!   # List of CEF resource files.
!   set(CEF_RESOURCE_FILES
!     cef.pak
!     cef_100_percent.pak
!     cef_200_percent.pak
!     cef_extensions.pak
!     devtools_resources.pak
!     icudtl.dat
!     locales
!     )
! 
! elseif(OS_WINDOWS)
    # Configure use of the sandbox.
    option(USE_SANDBOX "Enable or disable use of the sandbox." ON)
    if(USE_SANDBOX AND NOT MSVC_VERSION EQUAL 1900)
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/include/base/cef_atomicops.h cef_binary_3.2987.1596.gc2b4638_windows64/include/base/cef_atomicops.h
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/include/base/cef_atomicops.h	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/include/base/cef_atomicops.h	2017-03-19 23:34:49.698668700 -0300
***************
*** 177,183 ****
  }  // namespace base
  
  // Include our platform specific implementation.
! #if defined(OS_WIN) && defined(COMPILER_MSVC) && defined(ARCH_CPU_X86_FAMILY)
  #include "include/base/internal/cef_atomicops_x86_msvc.h"
  #elif defined(OS_MACOSX)
  #include "include/base/internal/cef_atomicops_mac.h"
--- 177,183 ----
  }  // namespace base
  
  // Include our platform specific implementation.
! #if defined(OS_WIN) && defined(ARCH_CPU_X86_FAMILY)
  #include "include/base/internal/cef_atomicops_x86_msvc.h"
  #elif defined(OS_MACOSX)
  #include "include/base/internal/cef_atomicops_mac.h"
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/include/base/internal/cef_atomicops_x86_msvc.h cef_binary_3.2987.1596.gc2b4638_windows64/include/base/internal/cef_atomicops_x86_msvc.h
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/include/base/internal/cef_atomicops_x86_msvc.h	2017-03-17 03:11:48.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/include/base/internal/cef_atomicops_x86_msvc.h	2017-03-19 23:35:27.588427700 -0300
***************
*** 81,87 ****
    return Barrier_AtomicIncrement(ptr, increment);
  }
  
! #if !(defined(_MSC_VER) && _MSC_VER >= 1400)
  #error "We require at least vs2005 for MemoryBarrier"
  #endif
  inline void MemoryBarrier() {
--- 81,87 ----
    return Barrier_AtomicIncrement(ptr, increment);
  }
  
! #if !(defined(_MSC_VER) && _MSC_VER >= 1400) && !(__MINGW32__)
  #error "We require at least vs2005 for MemoryBarrier"
  #endif
  inline void MemoryBarrier() {
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/include/internal/cef_string_wrappers.h cef_binary_3.2987.1596.gc2b4638_windows64/include/internal/cef_string_wrappers.h
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/include/internal/cef_string_wrappers.h	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/include/internal/cef_string_wrappers.h	2017-03-19 23:36:07.077311800 -0300
***************
*** 31,36 ****
--- 31,37 ----
  #define CEF_INCLUDE_INTERNAL_CEF_STRING_WRAPPERS_H_
  #pragma once
  
+ #include <cstring>
  #include <memory.h>
  #include <string>
  
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/cefclient/CMakeLists.txt cef_binary_3.2987.1596.gc2b4638_windows64/tests/cefclient/CMakeLists.txt
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/cefclient/CMakeLists.txt	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/tests/cefclient/CMakeLists.txt	2017-03-20 00:47:53.195817600 -0300
***************
*** 496,503 ****
    # Executable target.
    add_executable(${CEF_TARGET} WIN32 ${CEFCLIENT_SRCS})
    SET_EXECUTABLE_TARGET_PROPERTIES(${CEF_TARGET})
    add_dependencies(${CEF_TARGET} libcef_dll_wrapper)
!   target_link_libraries(${CEF_TARGET} libcef_lib libcef_dll_wrapper ${CEF_STANDARD_LIBS} glu32.lib imm32.lib opengl32.lib)
  
    if(USE_SANDBOX)
      # Logical target used to link the cef_sandbox library.
--- 496,504 ----
    # Executable target.
    add_executable(${CEF_TARGET} WIN32 ${CEFCLIENT_SRCS})
    SET_EXECUTABLE_TARGET_PROPERTIES(${CEF_TARGET})
+   set_property(TARGET ${CEF_TARGET} PROPERTY LINK_FLAGS -municode)
    add_dependencies(${CEF_TARGET} libcef_dll_wrapper)
!   target_link_libraries(${CEF_TARGET} libcef_dll_wrapper libcef_lib ${CEF_STANDARD_LIBS} glu32.lib imm32.lib opengl32.lib)
  
    if(USE_SANDBOX)
      # Logical target used to link the cef_sandbox library.
***************
*** 506,512 ****
    endif()
  
    # Add the custom manifest files to the executable.
!   ADD_WINDOWS_MANIFEST("${CMAKE_CURRENT_SOURCE_DIR}/resources/win" "${CEF_TARGET}" "exe")
  
    # Copy CEF binary and resource files to the target output directory.
    COPY_FILES("${CEF_TARGET}" "${CEF_BINARY_FILES}" "${CEF_BINARY_DIR}" "${CEF_TARGET_OUT_DIR}")
--- 507,515 ----
    endif()
  
    # Add the custom manifest files to the executable.
!   if(NOT MINGW)
!     ADD_WINDOWS_MANIFEST("${CMAKE_CURRENT_SOURCE_DIR}/resources/win" "${CEF_TARGET}" "exe")
!   endif()
  
    # Copy CEF binary and resource files to the target output directory.
    COPY_FILES("${CEF_TARGET}" "${CEF_BINARY_FILES}" "${CEF_BINARY_DIR}" "${CEF_TARGET_OUT_DIR}")
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/cefsimple/CMakeLists.txt cef_binary_3.2987.1596.gc2b4638_windows64/tests/cefsimple/CMakeLists.txt
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/cefsimple/CMakeLists.txt	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/tests/cefsimple/CMakeLists.txt	2017-03-20 00:47:47.607882200 -0300
***************
*** 183,189 ****
    add_executable(${CEF_TARGET} WIN32 ${CEFSIMPLE_SRCS})
    add_dependencies(${CEF_TARGET} libcef_dll_wrapper)
    SET_EXECUTABLE_TARGET_PROPERTIES(${CEF_TARGET})
!   target_link_libraries(${CEF_TARGET} libcef_lib libcef_dll_wrapper ${CEF_STANDARD_LIBS})
  
    if(USE_SANDBOX)
      # Logical target used to link the cef_sandbox library.
--- 183,190 ----
    add_executable(${CEF_TARGET} WIN32 ${CEFSIMPLE_SRCS})
    add_dependencies(${CEF_TARGET} libcef_dll_wrapper)
    SET_EXECUTABLE_TARGET_PROPERTIES(${CEF_TARGET})
!   set_property(TARGET ${CEF_TARGET} PROPERTY LINK_FLAGS -municode)
!   target_link_libraries(${CEF_TARGET} libcef_dll_wrapper libcef_lib ${CEF_STANDARD_LIBS})
  
    if(USE_SANDBOX)
      # Logical target used to link the cef_sandbox library.
***************
*** 192,198 ****
    endif()
  
    # Add the custom manifest files to the executable.
!   ADD_WINDOWS_MANIFEST("${CMAKE_CURRENT_SOURCE_DIR}" "${CEF_TARGET}" "exe")
  
    # Copy binary and resource files to the target output directory.
    COPY_FILES("${CEF_TARGET}" "${CEF_BINARY_FILES}" "${CEF_BINARY_DIR}" "${CEF_TARGET_OUT_DIR}")
--- 193,201 ----
    endif()
  
    # Add the custom manifest files to the executable.
!   if(NOT MINGW)
!     ADD_WINDOWS_MANIFEST("${CMAKE_CURRENT_SOURCE_DIR}" "${CEF_TARGET}" "exe")
!   endif()
  
    # Copy binary and resource files to the target output directory.
    COPY_FILES("${CEF_TARGET}" "${CEF_BINARY_FILES}" "${CEF_BINARY_DIR}" "${CEF_TARGET_OUT_DIR}")
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/ceftests/CMakeLists.txt cef_binary_3.2987.1596.gc2b4638_windows64/tests/ceftests/CMakeLists.txt
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/ceftests/CMakeLists.txt	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/tests/ceftests/CMakeLists.txt	2017-03-20 00:42:04.431771500 -0300
***************
*** 402,413 ****
    add_executable(${CEF_TARGET} WIN32 ${UNITTESTS_SRCS} ${UNITTESTS_RESOURCES_SRCS})
    add_dependencies(${CEF_TARGET} libcef_dll_wrapper cef_gtest)
  
!   list(APPEND CEF_EXE_LINKER_FLAGS
!     /SUBSYSTEM:CONSOLE  # Configure as a console application.
!   )
  
    SET_EXECUTABLE_TARGET_PROPERTIES(${CEF_TARGET})
!   target_link_libraries(${CEF_TARGET} libcef_lib libcef_dll_wrapper cef_gtest ${CEF_STANDARD_LIBS})
  
    if(USE_SANDBOX)
      # Logical target used to link the cef_sandbox library.
--- 402,415 ----
    add_executable(${CEF_TARGET} WIN32 ${UNITTESTS_SRCS} ${UNITTESTS_RESOURCES_SRCS})
    add_dependencies(${CEF_TARGET} libcef_dll_wrapper cef_gtest)
  
!   if(NOT MINGW)
!     list(APPEND CEF_EXE_LINKER_FLAGS
!       /SUBSYSTEM:CONSOLE  # Configure as a console application.
!     )
!   endif()
  
    SET_EXECUTABLE_TARGET_PROPERTIES(${CEF_TARGET})
!   target_link_libraries(${CEF_TARGET} libcef_dll_wrapper libcef_lib cef_gtest ${CEF_STANDARD_LIBS})
  
    if(USE_SANDBOX)
      # Logical target used to link the cef_sandbox library.
***************
*** 416,422 ****
    endif()
  
    # Add the custom manifest files to the executable.
!   ADD_WINDOWS_MANIFEST("${CMAKE_CURRENT_SOURCE_DIR}/resources/win" "${CEF_TARGET}" "exe")
  
    # Copy CEF binary and resource files to the target output directory.
    COPY_FILES("${CEF_TARGET}" "${CEF_BINARY_FILES}" "${CEF_BINARY_DIR}" "${CEF_TARGET_OUT_DIR}")
--- 418,426 ----
    endif()
  
    # Add the custom manifest files to the executable.
!   if(NOT MINGW)
!     ADD_WINDOWS_MANIFEST("${CMAKE_CURRENT_SOURCE_DIR}/resources/win" "${CEF_TARGET}" "exe")
!   endif()
  
    # Copy CEF binary and resource files to the target output directory.
    COPY_FILES("${CEF_TARGET}" "${CEF_BINARY_FILES}" "${CEF_BINARY_DIR}" "${CEF_TARGET_OUT_DIR}")
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/ceftests/run_all_unittests.cc cef_binary_3.2987.1596.gc2b4638_windows64/tests/ceftests/run_all_unittests.cc
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/ceftests/run_all_unittests.cc	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/tests/ceftests/run_all_unittests.cc	2017-03-20 00:51:48.838037400 -0300
***************
*** 110,116 ****
  
    void* windows_sandbox_info = NULL;
  
! #if defined(OS_WIN)
    // Manages the life span of the sandbox information object.
    CefScopedSandboxInfo scoped_sandbox;
    windows_sandbox_info = scoped_sandbox.sandbox_info();
--- 110,116 ----
  
    void* windows_sandbox_info = NULL;
  
! #if defined(OS_WIN) && defined(CEF_USE_SANDBOX)
    // Manages the life span of the sandbox information object.
    CefScopedSandboxInfo scoped_sandbox;
    windows_sandbox_info = scoped_sandbox.sandbox_info();
diff -r -c cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/gtest/CMakeLists.txt cef_binary_3.2987.1596.gc2b4638_windows64/tests/gtest/CMakeLists.txt
*** cef_binary_3.2987.1596.gc2b4638_windows64.orig/tests/gtest/CMakeLists.txt	2017-03-17 03:11:14.000000000 -0300
--- cef_binary_3.2987.1596.gc2b4638_windows64/tests/gtest/CMakeLists.txt	2017-03-19 23:37:08.784135000 -0300
***************
*** 24,30 ****
  # All dependent targets are unit tests.
  target_compile_definitions(${CEF_TARGET} PUBLIC -DUNIT_TEST)
  
! if(OS_WINDOWS)
    # Disable unused variable warning.
    target_compile_options(${CEF_TARGET} PRIVATE "/wd4800")
  endif()
--- 24,30 ----
  # All dependent targets are unit tests.
  target_compile_definitions(${CEF_TARGET} PUBLIC -DUNIT_TEST)
  
! if(OS_WINDOWS AND NOT MINGW)
    # Disable unused variable warning.
    target_compile_options(${CEF_TARGET} PRIVATE "/wd4800")
  endif()
